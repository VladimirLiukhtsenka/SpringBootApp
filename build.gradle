plugins {
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id "com.palantir.docker" version "0.25.0"
}

subprojects {
    group 'by.issoft.training'
    version '1.0-SNAPSHOT'

    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    repositories {
        mavenCentral()
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok:1.18.12'
        annotationProcessor 'org.projectlombok:lombok:1.18.12'
        implementation 'org.springframework.boot:spring-boot-starter-web'
    }

    if (name == 'segmentation-service' || name == 'user-service') {
        configurations {
            compileOnly {
                extendsFrom annotationProcessor
            }
        }

        apply plugin: 'com.palantir.docker'

        dependencies {
            implementation project(':common')
            testImplementation('org.springframework.boot:spring-boot-starter-test') {
                exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
            }
            compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.11.2'
        }

        test {
            useJUnitPlatform()
        }
    }
}

project(':common') {
    bootJar {
        enabled = false
    }

    jar {
        enabled = true
    }
}

project(':user-service') {
    dependencies {
        compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '2.2.5.RELEASE'
    }

    docker {
        name "user-service"
        dockerfile file('Dockerfile')
        copySpec.from(jar).rename(".*", "app.jar")
        buildArgs(['JAR_FILE': "app.jar"])
    }
}